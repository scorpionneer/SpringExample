<?xml version = "1.0" encoding = "UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	<!-- init will be called when context is initialized, destroy will be called 
		once the object is of no use -->
	<bean id="student" class="constructorinjection.Student">
		<constructor-arg value="neerav" />
		<constructor-arg value="1" />
		<constructor-arg>
			<ref bean="address" />
		</constructor-arg>
	</bean>

	<bean id="student1" class="constructorinjection.Student">
		<constructor-arg value="neerav" />
	</bean>

	<bean id="student2" class="constructorinjection.Student">
		<constructor-arg value="Krishna" />
		<constructor-arg value="1" />
		<constructor-arg>
			<bean id="address1" class="constructorinjection.Address">
				<constructor-arg value="Mumbai" />
				<constructor-arg value="Maharashtra" />
				<constructor-arg value="India" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="student3" class="constructorinjection.Student">
	</bean>

	<bean id="address" class="constructorinjection.Address">
		<constructor-arg value="Pune" />
		<constructor-arg value="Maharashtra" />
		<constructor-arg value="India" />
	</bean>

	<!-- If we use application context then we will get ClassNotFoundException 
		for below bean as we don't have any teacher class and Application context 
		creates objects during initializtion, but if we use BeanFactory then we won't 
		get exception until we refer this bean in our code -->
	<!-- <bean id = "teacher" class = "constructorinjection.Teacher"> <property 
		name="name" value="Harish"/> </bean> -->
</beans>